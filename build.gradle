buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.2"
}

version "2.0.3a-SNAPSHOT"
group "org.grails.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

ext['tomcat.version'] = '7.0.59'

dependencies {

    compile("org.xhtmlrenderer:core-renderer:R8")
    compile("com.lowagie:itext:2.1.0")
    testCompile("org.apache.pdfbox:pdfbox:1.0.0") {
        exclude module:'jempbox'
    }

    provided "org.springframework.boot:spring-boot-starter-logging"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
//    provided 'javax.servlet:javax.servlet-api:3.0.1'

    testCompile "org.grails:grails-plugin-testing"
    testCompile 'org.grails:grails-datastore-rest-client:4.0.3.RELEASE'
    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

jar {
  exclude "RenderingController**"
  exclude "application.groovy"
  exclude "*.gsp"
  exclude "*.data"
  exclude "gsp_*"
  exclude "gsp/*"
}

grailsPublish {
    user = 'user'
    key = 'key'
    userOrg = 'bio-org-au' // optional, otherwise published to personal bintray account
    repo = 'plugins' // optional, defaults to 'plugins'

    websiteUrl = 'http://github.com/gpc'
    license {
        name = 'Apache-2.0'
    }
    issueTrackerUrl = 'http://gpc.github.com/grails-rendering/issues'
    vcsUrl = 'http://gpc.github.com/grails-rendering'
    title = "Grails Rendering"
    desc = "Render GSPs as PDFs, JPEGs, GIFs and PNGs"
    developers = [gpc:"Grails Plugin Collective"]
}